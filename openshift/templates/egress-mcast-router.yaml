apiVersion: v1
kind: Template
labels:
  template: egress-mcast-router
message: 'The following service(s) have been created in your project: ${NAME}'
metadata:
  annotations:
    description: A multicast router for openshift. It converts a unicast UDP stream to a multicast stream.
    iconClass: pficon-route
    openshift.io/display-name: Egress Multicast Router
    tags: multicast, egress
  name: egress-mcast-router
  namespace: openshift
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the router pods
    name: ${NAME}-mcr
  spec:
    ports:
    - name: mcast
      port: ${MULTICAST_PORT}
      protocol: UDP
    selector:
      app: ${NAME}-mcr
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    name: ${NAME}-mcr
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${NAME}-mcr
    name: ${NAME}-mcr
    namespace: default
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}-mcr:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/st0ne-dot-at/openshift-egress-mulicast.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: origin-base:latest
      type: Docker
    triggers:
    - type: ConfigChange
    - imageChange:
        lastTriggeredImageID: openshift/origin-base
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${NAME}-mcr
    name: ${NAME}-mcr
    namespace: default
  spec:
    replicas: 2
    selector:
      app: ${NAME}-mcr
      deploymentconfig: ${NAME}-mcr
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.openshift-egress-mulicast.image.entrypoint: '["/bin/bash"]'
        creationTimestamp: null
        labels:
          app: ${NAME}-mcr
          deploymentconfig: ${NAME}-mcr
      spec:
        hostNetwork: true
        restartPolicy: Always
        serviceAccount: ${PRIVILEGED_SERVICEACCOUNT}
        serviceAccountName: ${PRIVILEGED_SERVICEACCOUNT}
        containers:
        - env:
          - name: MULTICAST_DESTINATION
            value: ${MULTICAST_DESTINATION}
          - name: MULTICAST_PORT
            value: "${MULTICAST_PORT}"
          - name: VERBOSE
            value: "${VERBOSE}"
          image: ' '
          imagePullPolicy: Always
          ports:
          - containerPort: ${MULTICAST_PORT}
            name: mcast
            protocol: UDP
          name: ${NAME}-mcr
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          resources:
            limits:
              memory: 50Mi
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext:
          privileged: true
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}-mcr
        from:
          kind: ImageStreamTag
          name: ${NAME}-mcr:latest
          namespace: default
      type: ImageChange
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: xy
- description: The multicast destination address.
  displayName: Multicast Address
  name: MULTICAST_DESTINATION
  required: true
  value: 239.255.200.68
- description: The multicast destination port.
  displayName: Multicast Port
  name: MULTICAST_PORT
  required: true
  value: "3000"
- description: Run socat in verbose mode?
  displayName: Verbose Mode
  name: VERBOSE
  value: "false"
- description: The privileged serviceaccount
  displayName: Service Account
  name: PRIVILEGED_SERVICEACCOUNT
  value: "router"
